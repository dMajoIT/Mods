//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BeatificaBytes.Synology.Mods.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Packages {
            get {
                return ((string)(this["Packages"]));
            }
            set {
                this["Packages"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string PackageRoot {
            get {
                return ((string)(this["PackageRoot"]));
            }
            set {
                this["PackageRoot"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string SourceImages {
            get {
                return ((string)(this["SourceImages"]));
            }
            set {
                this["SourceImages"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Collections.Specialized.StringCollection Recents {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["Recents"]));
            }
            set {
                this["Recents"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Collections.Specialized.StringCollection RecentsName {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["RecentsName"]));
            }
            set {
                this["RecentsName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool UpgradeRequired {
            get {
                return ((bool)(this["UpgradeRequired"]));
            }
            set {
                this["UpgradeRequired"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string PackageRepo {
            get {
                return ((string)(this["PackageRepo"]));
            }
            set {
                this["PackageRepo"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AdvancedEditor {
            get {
                return ((bool)(this["AdvancedEditor"]));
            }
            set {
                this["AdvancedEditor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool DefaultPackageRepo {
            get {
                return ((bool)(this["DefaultPackageRepo"]));
            }
            set {
                this["DefaultPackageRepo"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool OpenWith {
            get {
                return ((bool)(this["OpenWith"]));
            }
            set {
                this["OpenWith"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool DefaultPackageRoot {
            get {
                return ((bool)(this["DefaultPackageRoot"]));
            }
            set {
                this["DefaultPackageRoot"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LastPackage {
            get {
                return ((string)(this["LastPackage"]));
            }
            set {
                this["LastPackage"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"This SOFTWARE PRODUCT is provided by THE PROVIDER ""as is"" and ""with all faults."" THE PROVIDER makes no representations or warranties of any kind concerning the safety, suitability, lack of viruses, inaccuracies, typographical errors, or other harmful components of this SOFTWARE PRODUCT. There are inherent dangers in the use of any software, and you are solely responsible for determining whether this SOFTWARE PRODUCT is compatible with your equipment and other software installed on your equipment. You are also solely responsible for the protection of your equipment and backup of your data, and THE PROVIDER will not be liable for any damages you may suffer in connection with using, modifying, or distributing this SOFTWARE PRODUCT.")]
        public string License {
            get {
                return ((string)(this["License"]));
            }
            set {
                this["License"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"# set the name of the package in the nginx config
sed -i -e ""s|@MODS_CGI@|$SYNOPKG_PKGNAME|g"" ""$SYNOPKG_PKGDEST/ui/dsm.cgi.conf""

# link the nginx config to redirect pages accessed on admin port
rm -f /usr/syno/share/nginx/conf.d/dsm.$SYNOPKG_PKGNAME.conf
ln -s $SYNOPKG_PKGDEST/ui/dsm.cgi.conf /usr/syno/share/nginx/conf.d/dsm.$SYNOPKG_PKGNAME.conf
#sudo synoservicecfg --reload nginx [Add startstop_restart_services=""nginx"" in INFO file instead of this line]
")]
        public string router_inst {
            get {
                return ((string)(this["router_inst"]));
            }
            set {
                this["router_inst"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(" v7.3")]
        public string Version {
            get {
                return ((string)(this["Version"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n          <script type=\"text/javascript\">\r\n          function autoScrolling() {" +
            " window.scrollTo(0,document.body.scrollHeight); }\r\n          </script>\r\n        " +
            "  <?php\r\n          /**\r\n          * Execute the given command by displaying cons" +
            "ole output live to the user.\r\n          *  @param  string  cmd          :  comma" +
            "nd to be executed\r\n          *  @return array   exit_status  :  exit status of t" +
            "he executed command\r\n          *                  output       :  console output" +
            " of the executed command\r\n          */\r\n          function liveExecuteCommand($c" +
            "md)\r\n          {\r\n\r\n          while (@ ob_end_flush()); // end all output buffer" +
            "s if any\r\n\r\n          $proc = popen(\"$cmd 2>&1 ; echo Exit status : $?\", \'r\');\r\n" +
            "\r\n          $live_output     = \"\";\r\n          $complete_output = \"\";\r\n\r\n        " +
            "  while (!feof($proc))\r\n          {\r\n          $live_output     = fread($proc, 4" +
            "096);\r\n          $complete_output = $complete_output . $live_output;\r\n          " +
            "echo \"$live_output\";\r\n\r\n          echo \"<script type=\\\"text/javascript\\\">\";\r\n   " +
            "       echo \"autoScrolling();\";\r\n          echo \"</script>\";\r\n\r\n          @ flus" +
            "h();\r\n          }\r\n\r\n          pclose($proc);\r\n\r\n          // get exit status\r\n " +
            "         preg_match(\'/[0-9]+$/\', $complete_output, $matches);\r\n\r\n          // re" +
            "turn exit status and intended output\r\n          return array (\r\n          \'exit_" +
            "status\'  => intval($matches[0]),\r\n          \'output\'       => str_replace(\"Exit " +
            "status : \" . $matches[0], \'\', $complete_output)\r\n          );\r\n          }\r\n    " +
            "      echo \"<pre>\";\r\n\r\n          $result = liveExecuteCommand(\"./mods.sh\");\r\n\r\n " +
            "         if($result[\'exit_status\'] === 0){\r\n          // do something if command" +
            " execution succeeds\r\n          } else {\r\n          // do something on failure\r\n " +
            "         }\r\n          echo \"</pre>\";\r\n          echo \"<script type=\\\"text/javasc" +
            "ript\\\">\";\r\n          echo \"autoScrolling();\";\r\n          echo \"</script>\";\r\n    " +
            "      ?>\r\n        ")]
        public string Ps_Exec {
            get {
                return ((string)(this["Ps_Exec"]));
            }
            set {
                this["Ps_Exec"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("location ~ ^/webman/3rdparty/@MODS_CGI@/.*\\.php {\r\n  root /usr/syno/synoman;\r\n  i" +
            "nclude scgi_params;\r\n  rewrite .*\\.php /webman/3rdparty/@MODS_CGI@/router.cgi br" +
            "eak;\r\n  scgi_pass synoscgi;\r\n}")]
        public string dsm_cgi {
            get {
                return ((string)(this["dsm_cgi"]));
            }
            set {
                this["dsm_cgi"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("#!/bin/sh\r\n\r\nLOG=\"/var/log/@SYNOPKG_PKGNAME@\"\r\n\r\n# the web server account (Ex.: h" +
            "ttp) must be granted write access\r\nif [ -w $LOG ]; then\r\n  echo `date` \"--------" +
            "----------------------------------------------------------\" >> $LOG\r\n  echo `dat" +
            "e` \"ROUTER.cgi has been called\" >> $LOG\r\n  echo `date` \"HANDLING request for\" $R" +
            "EQUEST_URI >> $LOG\r\n  \r\n  # Log all environment variables if the Query String co" +
            "ntains \'LogRouterCgi\'\r\n  if [[ $QUERY_STRING = *\"LogRouterCgi\"* ]]; then  \r\n    " +
            "printenv >> $LOG\r\n  fi  \r\nfi\r\n\r\nif [ \"$REQUEST_URI\" == \"$SCRIPT_NAME\" ]; then\r\n " +
            " if [ -w $LOG ]; then\r\n    echo `date` \"NO REQUEST:\" $SCRIPT_NAME >> $LOG\r\n  fi\r" +
            "\n  #echo \"Content-type: text/html\"\r\n  echo -e \"HTTP/1.1 200 OK\\n\\n\"\r\nelse\r\n\r\n  #" +
            " Set redirect_status to 1 to get php cgi working.\r\n  REDIRECT_STATUS=1 export RE" +
            "DIRECT_STATUS\r\n  \r\n  # Fix several $_SERVER globals.\r\n  PHP_SELF=$REQUEST_URI ex" +
            "port PHP_SELF\r\n  SCRIPT_NAME=$REQUEST_URI export SCRIPT_NAME\r\n  \r\n  # Generate t" +
            "he request url without the Query String parameters\r\n  SCRIPT_FILENAME=$DOCUMENT_" +
            "ROOT${REQUEST_URI%\\?$QUERY_STRING}\r\n  if [ -w $LOG ]; then\r\n    echo `date` \"SCR" +
            "IPT_FILENAME:\" $SCRIPT_FILENAME >> $LOG\r\n  fi\r\n\r\n  # Prepare the Query String pa" +
            "rameters\r\n  SCRIPT_PARAMETERS=${QUERY_STRING//[&]/ }\r\n  if [ -w $LOG ]; then\r\n  " +
            "  echo `date` \"SCRIPT_PARAMETERS:\" $SCRIPT_PARAMETERS >> $LOG\r\n  fi\r\n\r\n  SCRIPT_" +
            "FILENAME=`realpath $SCRIPT_FILENAME` export SCRIPT_FILENAME\r\n  if [ -w $LOG ]; t" +
            "hen\r\n    echo `date` \"REALPATH:\" $SCRIPT_FILENAME >> $LOG\r\n  fi\r\n  \r\n  if [ -w $" +
            "LOG ]; then\r\n    echo `date` \"EXECUTE:\" \"/usr/local/bin/php70-cgi -c /etc/php/ph" +
            "p.ini -d open_basedir=none \"$SCRIPT_FILENAME\" \"$SCRIPT_PARAMETERS\" 2>&1\" >> $LOG" +
            "\r\n  fi\r\n  /usr/local/bin/php70-cgi -c /etc/php/php.ini -d open_basedir=none $SCR" +
            "IPT_FILENAME $SCRIPT_PARAMETERS 2>&1\r\nfi")]
        public string router_cgi {
            get {
                return ((string)(this["router_cgi"]));
            }
            set {
                this["router_cgi"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n          7.0-40000\r\n          6.2-23739-2\r\n          6.2-23739-1\r\n          6." +
            "2-23739\r\n          6.2.1-23824-1\r\n          6.2.1-23824\r\n          6.1-15047-2\r\n" +
            "          6.1-15047-1\r\n          6.1-15047\r\n          6.1.7-15284-2\r\n          6" +
            ".1.7-15284-1\r\n          6.1.7-15284\r\n          6.1.6-15266-1\r\n          6.1.6-15" +
            "266\r\n          6.1.5-15254-1\r\n          6.1.5-15254\r\n          6.1.4-15217-5\r\n  " +
            "        6.1.4-15217-4\r\n          6.1.4-15217-3\r\n          6.1.4-15217-2\r\n       " +
            "   6.1.4-15217-1\r\n          6.1.4-15217\r\n          6.1.3-15152-8\r\n          6.1." +
            "3-15152-7\r\n          6.1.3-15152-6\r\n          6.1.3-15152-5\r\n          6.1.3-151" +
            "52-4\r\n          6.1.3-15152-3\r\n          6.1.3-15152-2\r\n          6.1.3-15152-1\r" +
            "\n          6.1.3-15152\r\n          6.1.2-15132-1\r\n          6.1.2-15132\r\n        " +
            "  6.1.1-15101-4\r\n          6.1.1-15101-3\r\n          6.1.1-15101-2\r\n          6.1" +
            ".1-15101-1\r\n          6.1.1-15101\r\n          6.0-7321-7\r\n          6.0-7321-6\r\n " +
            "         6.0-7321-5\r\n          6.0-7321-3\r\n          6.0-7321-2\r\n          6.0-7" +
            "321-1\r\n          6.0-7321\r\n          6.0.3-8754-8\r\n          6.0.3-8754-7\r\n     " +
            "     6.0.3-8754-6\r\n          6.0.3-8754-5\r\n          6.0.3-8754-4\r\n          6.0" +
            ".3-8754-3\r\n          6.0.3-8754-2\r\n          6.0.3-8754-1\r\n          6.0.3-8754\r" +
            "\n          6.0.2-8451-9\r\n          6.0.2-8451-8\r\n          6.0.2-8451-7\r\n       " +
            "   6.0.2-8451-6\r\n          6.0.2-8451-5\r\n          6.0.2-8451-4\r\n          6.0.2" +
            "-8451-3\r\n          6.0.2-8451-2\r\n          6.0.2-8451-11\r\n          6.0.2-8451-1" +
            "0\r\n          6.0.2-8451-1\r\n          6.0.2-8451\r\n          6.0.1-7393-2\r\n       " +
            "   6.0.1-7393-1\r\n          6.0.1-7393\r\n          5.2-5967-8\r\n          5.2-5967-" +
            "7\r\n          5.2-5967-6\r\n          5.2-5967-5\r\n          5.2-5967-4\r\n          5" +
            ".2-5967-3\r\n          5.2-5967-2\r\n          5.2-5967-1\r\n          5.2-5967\r\n     " +
            "     5.2-5644-8\r\n          5.2-5644-5\r\n          5.2-5644-3\r\n          5.2-5644-" +
            "2\r\n          5.2-5644-1\r\n          5.2-5644\r\n          5.2-5592-4\r\n          5.2" +
            "-5592-3\r\n          5.2-5592-2\r\n          5.2-5592-1\r\n          5.2-5592\r\n       " +
            "   5.2-5565-2\r\n          5.2-5565-1\r\n          5.2-5565\r\n          5.1-5055\r\n   " +
            "       5.1-5022-5\r\n          5.1-5022-4\r\n          5.1-5022-3\r\n          5.1-502" +
            "2-2\r\n          5.1-5022-1\r\n          5.1-5022\r\n          5.1-5021-2\r\n          5" +
            ".1-5021\r\n          5.1-5004-2\r\n          5.1-5004\r\n          5.0-4528-2\r\n       " +
            "   5.0-4528-1\r\n          5.0-4528\r\n        ")]
        public string dsm_releases {
            get {
                return ((string)(this["dsm_releases"]));
            }
            set {
                this["dsm_releases"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool PromptExplorer {
            get {
                return ((bool)(this["PromptExplorer"]));
            }
            set {
                this["PromptExplorer"] = value;
            }
        }
    }
}
