<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="BeatificaBytes.Synology.Mods.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
    <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="BeatificaBytes.Synology.Mods.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <applicationSettings>
    <BeatificaBytes.Synology.Mods.Properties.Settings>
      <setting name="Version" serializeAs="String">
        <value> v7.1</value>
      </setting>
    </BeatificaBytes.Synology.Mods.Properties.Settings>
  </applicationSettings>
  <userSettings>
    <BeatificaBytes.Synology.Mods.Properties.Settings>
      <setting name="Packages" serializeAs="String">
        <value />
      </setting>
      <setting name="PackageRoot" serializeAs="String">
        <value />
      </setting>
      <setting name="SourceImages" serializeAs="String">
        <value />
      </setting>
      <setting name="UpgradeRequired" serializeAs="String">
        <value>True</value>
      </setting>
      <setting name="PackageRepo" serializeAs="String">
        <value />
      </setting>
      <setting name="AdvancedEditor" serializeAs="String">
        <value>False</value>
      </setting>
      <setting name="DefaultPackageRepo" serializeAs="String">
        <value>False</value>
      </setting>
      <setting name="OpenWith" serializeAs="String">
        <value>False</value>
      </setting>
      <setting name="DefaultPackageRoot" serializeAs="String">
        <value>False</value>
      </setting>
      <setting name="LastPackage" serializeAs="String">
        <value />
      </setting>
      <setting name="License" serializeAs="String">
        <value>This SOFTWARE PRODUCT is provided by THE PROVIDER "as is" and "with all faults." THE PROVIDER makes no representations or warranties of any kind concerning the safety, suitability, lack of viruses, inaccuracies, typographical errors, or other harmful components of this SOFTWARE PRODUCT. There are inherent dangers in the use of any software, and you are solely responsible for determining whether this SOFTWARE PRODUCT is compatible with your equipment and other software installed on your equipment. You are also solely responsible for the protection of your equipment and backup of your data, and THE PROVIDER will not be liable for any damages you may suffer in connection with using, modifying, or distributing this SOFTWARE PRODUCT.</value>
      </setting>
      <setting name="Ps_Exec" serializeAs="String">
        <value>
          &lt;script type="text/javascript"&gt;
          function autoScrolling() { window.scrollTo(0,document.body.scrollHeight); }
          &lt;/script&gt;
          &lt;?php
          /**
          * Execute the given command by displaying console output live to the user.
          *  @param  string  cmd          :  command to be executed
          *  @return array   exit_status  :  exit status of the executed command
          *                  output       :  console output of the executed command
          */
          function liveExecuteCommand($cmd)
          {

          while (@ ob_end_flush()); // end all output buffers if any

          $proc = popen("$cmd 2&gt;&amp;1 ; echo Exit status : $?", 'r');

          $live_output     = "";
          $complete_output = "";

          while (!feof($proc))
          {
          $live_output     = fread($proc, 4096);
          $complete_output = $complete_output . $live_output;
          echo "$live_output";

          echo "&lt;script type=\"text/javascript\"&gt;";
          echo "autoScrolling();";
          echo "&lt;/script&gt;";

          @ flush();
          }

          pclose($proc);

          // get exit status
          preg_match('/[0-9]+$/', $complete_output, $matches);

          // return exit status and intended output
          return array (
          'exit_status'  =&gt; intval($matches[0]),
          'output'       =&gt; str_replace("Exit status : " . $matches[0], '', $complete_output)
          );
          }
          echo "&lt;pre&gt;";

          $result = liveExecuteCommand("./mods.sh");

          if($result['exit_status'] === 0){
          // do something if command execution succeeds
          } else {
          // do something on failure
          }
          echo "&lt;/pre&gt;";
          echo "&lt;script type=\"text/javascript\"&gt;";
          echo "autoScrolling();";
          echo "&lt;/script&gt;";
          ?&gt;
        </value>
      </setting>
      <setting name="dsm_cgi" serializeAs="String">
        <value>location ~ ^/webman/3rdparty/@MODS_CGI@/.*\.php {
  root /usr/syno/synoman;
  include scgi_params;
  rewrite .*\.php /webman/3rdparty/@MODS_CGI@/router.cgi break;
  scgi_pass synoscgi;
}</value>
      </setting>
      <setting name="router_cgi" serializeAs="String">
        <value>#!/bin/sh

LOG="/var/log/@SYNOPKG_PKGNAME@"

# the web server account (Ex.: http) must be granted write access
if [ -w $LOG ]; then
  echo `date` "------------------------------------------------------------------" &gt;&gt; $LOG
  echo `date` "ROUTER.cgi has been called" &gt;&gt; $LOG
  echo `date` "HANDLING request for" $REQUEST_URI &gt;&gt; $LOG
  
  # Log all environment variables if the Query String contains 'LogRouterCgi'
  if [[ $QUERY_STRING = *"LogRouterCgi"* ]]; then  
    printenv &gt;&gt; $LOG
  fi  
fi

if [ "$REQUEST_URI" == "$SCRIPT_NAME" ]; then
  if [ -w $LOG ]; then
    echo `date` "NO REQUEST:" $SCRIPT_NAME &gt;&gt; $LOG
  fi
  #echo "Content-type: text/html"
  echo -e "HTTP/1.1 200 OK\n\n"
else

  # Set redirect_status to 1 to get php cgi working.
  REDIRECT_STATUS=1 export REDIRECT_STATUS
  
  # Fix several $_SERVER globals.
  PHP_SELF=$REQUEST_URI export PHP_SELF
  SCRIPT_NAME=$REQUEST_URI export SCRIPT_NAME
  
  # Generate the request url without the Query String parameters
  SCRIPT_FILENAME=$DOCUMENT_ROOT${REQUEST_URI%\?$QUERY_STRING}
  if [ -w $LOG ]; then
    echo `date` "SCRIPT_FILENAME:" $SCRIPT_FILENAME &gt;&gt; $LOG
  fi

  # Prepare the Query String parameters
  SCRIPT_PARAMETERS=${QUERY_STRING//[&amp;]/ }
  if [ -w $LOG ]; then
    echo `date` "SCRIPT_PARAMETERS:" $SCRIPT_PARAMETERS &gt;&gt; $LOG
  fi

  SCRIPT_FILENAME=`realpath $SCRIPT_FILENAME` export SCRIPT_FILENAME
  if [ -w $LOG ]; then
    echo `date` "REALPATH:" $SCRIPT_FILENAME &gt;&gt; $LOG
  fi
  
  if [ -w $LOG ]; then
    echo `date` "EXECUTE:" "/usr/local/bin/php70-cgi -c /etc/php/php.ini -d open_basedir=none "$SCRIPT_FILENAME" "$SCRIPT_PARAMETERS" 2&gt;&amp;1" &gt;&gt; $LOG
  fi
  /usr/local/bin/php70-cgi -c /etc/php/php.ini -d open_basedir=none $SCRIPT_FILENAME $SCRIPT_PARAMETERS 2&gt;&amp;1
fi</value>
      </setting>
      <setting name="router_inst" serializeAs="String">
        <value># set the name of the package in the nginx config
sed -i -e "s|@MODS_CGI@|$SYNOPKG_PKGNAME|g" "$SYNOPKG_PKGDEST/ui/dsm.cgi.conf"

# link the nginx config to redirect pages accessed on admin port
rm -f /usr/syno/share/nginx/conf.d/dsm.$SYNOPKG_PKGNAME.conf
ln -s $SYNOPKG_PKGDEST/ui/dsm.cgi.conf /usr/syno/share/nginx/conf.d/dsm.$SYNOPKG_PKGNAME.conf
#sudo synoservicecfg --reload nginx [Add startstop_restart_services="nginx" in INFO file instead of this line]
</value>
      </setting>
      <setting name="dsm_releases" serializeAs="String">
        <value>6.2-23739-2
6.2-23739-1
6.2-23739
6.2.1-23824-1
6.2.1-23824
6.1-15047-2
6.1-15047-1
6.1-15047
6.1.7-15284-2
6.1.7-15284-1
6.1.7-15284
6.1.6-15266-1
6.1.6-15266
6.1.5-15254-1
6.1.5-15254
6.1.4-15217-5
6.1.4-15217-4
6.1.4-15217-3
6.1.4-15217-2
6.1.4-15217-1
6.1.4-15217
6.1.3-15152-8
6.1.3-15152-7
6.1.3-15152-6
6.1.3-15152-5
6.1.3-15152-4
6.1.3-15152-3
6.1.3-15152-2
6.1.3-15152-1
6.1.3-15152
6.1.2-15132-1
6.1.2-15132
6.1.1-15101-4
6.1.1-15101-3
6.1.1-15101-2
6.1.1-15101-1
6.1.1-15101
6.0-7321-7
6.0-7321-6
6.0-7321-5
6.0-7321-3
6.0-7321-2
6.0-7321-1
6.0-7321
6.0.3-8754-8
6.0.3-8754-7
6.0.3-8754-6
6.0.3-8754-5
6.0.3-8754-4
6.0.3-8754-3
6.0.3-8754-2
6.0.3-8754-1
6.0.3-8754
6.0.2-8451-9
6.0.2-8451-8
6.0.2-8451-7
6.0.2-8451-6
6.0.2-8451-5
6.0.2-8451-4
6.0.2-8451-3
6.0.2-8451-2
6.0.2-8451-11
6.0.2-8451-10
6.0.2-8451-1
6.0.2-8451
6.0.1-7393-2
6.0.1-7393-1
6.0.1-7393
5.2-5967-8
5.2-5967-7
5.2-5967-6
5.2-5967-5
5.2-5967-4
5.2-5967-3
5.2-5967-2
5.2-5967-1
5.2-5967
5.2-5644-8
5.2-5644-5
5.2-5644-3
5.2-5644-2
5.2-5644-1
5.2-5644
5.2-5592-4
5.2-5592-3
5.2-5592-2
5.2-5592-1
5.2-5592
5.2-5565-2
5.2-5565-1
5.2-5565
5.1-5055
5.1-5022-5
5.1-5022-4
5.1-5022-3
5.1-5022-2
5.1-5022-1
5.1-5022
5.1-5021-2
5.1-5021
5.1-5004-2
5.1-5004
5.0-4528-2
5.0-4528-1
5.0-4528
</value>
      </setting>
    </BeatificaBytes.Synology.Mods.Properties.Settings>
  </userSettings>
</configuration>